@page "/chart"
<h3>Chart</h3>
@using Blazor.Extensions;
@using Blazor.Extensions.Canvas
@using Blazor.Extensions.Canvas.Canvas2D;
@using Services;
@inject KlinesService KlinesService;

<PageTitle>Index</PageTitle>

<BECanvas Width="1280" Height="720" @ref="_canvasReference"></BECanvas>
@* params *@

@code {

    private Canvas2DContext _context;

    protected BECanvasComponent _canvasReference;

    private CandlestickChart _chart;




    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        try
        {
            this._context = await this._canvasReference.CreateCanvas2DAsync();

            _chart = new CandlestickChart(_context, _canvasReference);

            var candles = await KlinesService.GetKlines();
            Console.WriteLine("candles length: " + candles.Length);
            Console.WriteLine("inner array length " + candles[0].Length);
            Console.WriteLine("timestamp " + candles[0][0]);
            Console.WriteLine("open " + candles[0][1]);
            Console.WriteLine("close "  + candles[0][4]);
            Console.WriteLine("high " + candles[0][2]);
            Console.WriteLine("low "+ candles[0][3]);

            if (candles.Length != 0)
            {
                for (int i = 0; i < candles.Length; i++)
                {
                    var timeStamp = long.Parse(candles[i][0].ToString());
                    var high = double.Parse(candles[i][1].ToString());
                    var open = double.Parse(candles[i][4].ToString());
                    var close = double.Parse(candles[i][2].ToString());
                    var low = double.Parse(candles[i][3].ToString());

                    var candle = new Candlestick(timeStamp, high, open, close, low);
                    _chart.candlesticks.Add(candle);
                }
            }
            else
            {
                //alert problem with api
            }
         
          await  _chart.Draw();

        //   await this._context.SetFillStyleAsync("#252525");

            //await this._context.SetFontAsync("12px sans-serif");

            //await this._context.FillRectAsync(10, 100, 1000, 100);

            //await this._context.SetFillStyleAsync("red");

            //await this._context.FillRectAsync(10, 50, 1000, 100);

        }
        catch (Exception e)
        {
           Console.WriteLine(e.StackTrace);
        }

    }


}
